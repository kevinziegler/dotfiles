* Information to highlight
1. Git project
2. Sub-path of git project
   - Submodules?
3. Path is under HOME or /<DIR>
4. Basename of working directory

* Display Options/Examples
** Root of git project
Path: ~/User/kdz/dev/my-project/~
Display: ~[my-project] (.)~
** Subpath of git project
Path: ~/User/kdz/dev/my-project/some/path~
Display: ~[my-project] (s/path)~
** Submodule inside of git project
Path: ~/User/kdz/dev/my-project/some/submodule~
Display: ~[my-project:submodule] (.)~
** Non-Project
*** Root of HOME
Path: ~/User/kdz~
Display: ~~~
*** Sub-path of HOME
Path: ~/User/kdz/some/path~
Display: ~~/s/path~
*** Outside of HOME
Path: ~/usr/local/bin~
Display: ~/u/l/bin~

* Operations
- Directory Context :: is this HOME, FS Root, Git Project
- Display abbreviated path :: For a given path value, abbreviate such all parents to a single letter; display the full basename
- Display non-project path :: Display abbreviated path replacing HOME with ~~~
- Display Git Project Name :: :-delimited names of project/submodules
- Display Project sub-path :: abbreviated path from project or submodule root

| Context                        | Active Format              | Inactive Format            |
|--------------------------------+----------------------------+----------------------------|
| Git Project Root               | <project-name>             | <project-name>             |
| Git Project Subpath            | <project-name>:<subpath>   | <project-name>             |
| Git Project Submodule          | <project-name>:<submodule> | <project-name>:<submodule> |
| Non-Project Path (inside home) | ~/path/from/home           | ~/p/f/home                 |
